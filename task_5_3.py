# Домашнее задание номер 3 из урока 5 "Основы языка Python"
# Текст задания 3: Есть два списка:
# tutors = [
#     'Иван', 'Анастасия', 'Петр', 'Сергей',
#     'Дмитрий', 'Борис', 'Елена'
# ]
# klasses = [
#     '9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А'
# ]
# Необходимо реализовать генератор, возвращающий кортежи вида (<tutor>, <klass>), например:
# ('Иван', '9А')
# ('Анастасия', '7В')
# ...
# Количество генерируемых кортежей не должно быть больше длины списка tutors.
# Если в списке klasses меньше элементов, чем в списке tutors,
# необходимо вывести последние кортежи в виде: (<tutor>, None), например:
# ('Станислав', None)
#
# ### Доказать, что вы создали именно генератор.
# Проверить его работу вплоть до истощения. Подумать, в каких ситуациях генератор даст эффект.

tutors = ['Иван', 'Анастасия', 'Петр', 'Сергей', 'Дмитрий', 'Борис', 'Елена']
klasses = ['9А', '7В', '9Б', '9В', '8Б', '10А', '10Б', '9А']

def my_zip():
    for i, tutor in enumerate(tutors):
        if i < len(klasses):
            klass = klasses[i]
        else:
            klass = None
        yield (tutor, klass)

result = my_zip()
print(result)
print(next(result))
print(*result)
print(*my_zip())

result = ((a, b) for a, b in zip(tutors, klasses))
print(result)   #результат именно генератор
print(*result)  #вывод списка
